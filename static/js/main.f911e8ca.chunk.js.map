{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","useState","setTodos","todoTitle","setTodoTitle","setUserId","hasTitleError","setTitleError","hasUserError","setUserError","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f911e8ca.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { User, UserInfo } from '../UserInfo/UserInfo';\n\nexport interface Todo {\n  userId: number,\n  id: number,\n  title: string,\n  completed: boolean,\n  user?: User | null,\n}\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user\n        ? <UserInfo user={user} />\n        : 'waiting for user info'}\n    </article>\n  );\n};\n","import { Todo, TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo [];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './components/TodoInfo/TodoInfo';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(\n    user => user.id === todo.userId,\n  ),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n\n  function onSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTitleError(!todoTitle.length);\n    setUserError(!userId);\n\n    if (todoTitle.length && userId) {\n      const newTodo: Todo = {\n        userId,\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title: todoTitle,\n        completed: false,\n        user: usersFromServer.find(\n          user => user.id === userId,\n        ),\n      };\n\n      setTodos([...todos, newTodo]);\n      setTodoTitle('');\n      setUserId(0);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form action=\"/api/users\" method=\"POST\" onSubmit={onSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter todo title\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            onChange={(event) => {\n              setTitleError(false);\n              setTodoTitle(event.target.value);\n            }}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserError(false);\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}